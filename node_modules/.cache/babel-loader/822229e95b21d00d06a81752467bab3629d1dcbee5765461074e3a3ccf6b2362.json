{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Icons = _resolveComponent(\"Icons\");\n  return _openBlock(), _createElementBlock(\"button\", {\n    type: \"button\",\n    class: \"btn m-1 border\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.deleteBtn && $options.deleteBtn(...args))\n  }, [_createVNode(_component_Icons, {\n    iconName: \"trash-can-outline\"\n  })]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAES;IAFDC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,gBAAgB;IAAEC,OAAK,yCAAEC,iDAAS;MAC5DC,aAAsCC;IAA/BC,QAAQ,EAAC;EAAmB","names":["_createElementBlock","type","class","onClick","$options","_createVNode","_component_Icons","iconName"],"sourceRoot":"","sources":["C:\\Users\\ritu6\\Documents\\study\\js\\express\\MySlack\\src\\components\\utils\\buttons\\Delete.vue"],"sourcesContent":["<template>\r\n  <button type=\"button\" class=\"btn m-1 border\" @click=\"deleteBtn\">\r\n    <Icons iconName=\"trash-can-outline\" />\r\n  </button>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Icons from \"@/components/utils/MdiIcons.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  components: {\r\n    Icons,\r\n  },\r\n  props: {\r\n    dataId: Number,\r\n  },\r\n  data() {\r\n    return {\r\n      selected: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    deleteBtn: function () {\r\n      var data = {\r\n        // コンテンツのID\r\n        id: this.dataId,\r\n        // スレッドID\r\n        tid: this.$store.state.threadFunction.threadId,\r\n        // ログインユーザーのID\r\n        uid: this.$store.state.authFunction.userId,\r\n      };\r\n\r\n      let url = \"http://localhost:3000/comments/delete\";\r\n      axios.post(url, data).then(() => {\r\n        axios.get(\"http://localhost:3000/comments/searchComments?id=\" + this.$store.state.threadFunction.threadId)\r\n        .then((res) => {\r\n          this.$store.state.commentFunction.commentList.data = res.data;\r\n        });\r\n      });\r\n\r\n      console.log(data);\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}