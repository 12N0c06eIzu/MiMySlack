{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport axios from \"axios\";\n// import { Splitpanes, Pane } from \"splitpanes\";\nexport default {\n  name: \"InputFormView\",\n  props: {\n    title: String,\n    inputId: Number,\n    sendMode: String\n  },\n  components: {},\n  data() {\n    return {\n      text: \"\",\n      keyCodeBefore: null\n    };\n  },\n  methods: {\n    send: function () {\n      console.log(\"送信モード: \" + this.sendMode);\n      console.log(\"送信先ID: \" + this.inputId);\n      console.log(\"送信メッセージ: \" + this.text);\n      if (this.inputId <= 0) {\n        console.log(\"送信先のIDが0のため不正です。\");\n        return \"error\";\n      }\n      if (this.text == \"\") {\n        console.log(\"テキストが空のため不正です。\");\n        return \"error\";\n      }\n      let url = \"\";\n      let route = [];\n      let data = {};\n      // URLだけ調節するようにする方がコードがシンプルになりそう。\n      switch (this.sendMode) {\n        case \"S0001\":\n          console.log(this.sendMode);\n          break;\n        case \"S0002\":\n          url = \"http://localhost:3000/spaces/\";\n          route.push(\"create\", \"searchSpaces?pk_wid=\");\n          console.log(this.sendMode);\n          // データをJSON形式で保存して積んでいく\n          data = {\n            // parentID\n            pid: this.inputId,\n            // childId\n            // ここ積んでるけど使ってませんし登録してません\n            cid: this.$store.state.authFunction.userId,\n            // DM Flag\n            dc_flag: 0,\n            // content\n            content: this.text\n          };\n          break;\n        case \"S0003\":\n          url = \"http://localhost:3000/threads/\";\n          route.push(\"create\", \"searchThreads?id=\");\n          console.log(this.sendMode);\n          // データをJSON形式で保存して積んでいく\n          data = {\n            // parentID\n            pid: this.inputId,\n            // childId\n            cid: this.$store.state.authFunction.userId,\n            // content\n            content: this.text\n          };\n          break;\n        case \"S0004\":\n          url = \"http://localhost:3000/comments/\";\n          route.push(\"create\", \"searchComments?id=\");\n          console.log(this.sendMode);\n          // データをJSON形式で保存して積んでいく\n          data = {\n            // parentID\n            pid: this.inputId,\n            // childId\n            cid: this.$store.state.authFunction.userId,\n            // content\n            content: this.text\n          };\n          break;\n        default:\n          console.log(\"送信処理分岐の対象外\");\n          break;\n      }\n      // URLを動的に変更\n      axios.post(url + route[0], data).then(res => {\n        // console.log(res.data);\n        axios.get(url + route[1] + this.inputId).then(res => {\n          switch (this.sendMode) {\n            case \"S0001\":\n              break;\n            case \"S0002\":\n              this.$store.state.spaceFunction.spaceList.data = res.data;\n              break;\n            case \"S0003\":\n              this.$store.state.threadFunction.threadList.data = res.data;\n              break;\n            case \"S0004\":\n              this.$store.state.commentFunction.commentList.data = res.data;\n              break;\n            default:\n              break;\n          }\n          // 入力値を初期化\n          this.text = \"\";\n        });\n        console.log(res.data);\n      });\n    },\n    /**\r\n     * Control(Code: 17)を直前に押下していた場合\r\n     * 投稿するメソッドを発火させる。\r\n     * @param {*} e \r\n     * keyCode: キーコード\r\n     * key: キー名\r\n     */\n    sendText: function (e) {\n      console.log(e.keyCode);\n      if (this.keyCodeBefore == 17) {\n        console.log(\"koko\");\n        if (e.keyCode == 13) {\n          this.send();\n        }\n      }\n      // 直前に入力したキーのコードを保存する。\n      this.keyCodeBefore = e.keyCode;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":"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","names":["axios","name","props","title","String","inputId","Number","sendMode","components","data","text","keyCodeBefore","methods","send","console","log","url","route","push","pid","cid","$store","state","authFunction","userId","dc_flag","content","post","then","res","get","spaceFunction","spaceList","threadFunction","threadList","commentFunction","commentList","sendText","e","keyCode","mounted"],"sourceRoot":"","sources":["C:\\Users\\ritu6\\Documents\\study\\js\\express\\MySlack\\src\\components\\InputForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"input-group px-3 pb-3\">\r\n    <input type=\"hidden\" :value=\"inputId\" />\r\n    <input type=\"hidden\" :value=\"sendMode\" />\r\n    <textarea\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      v-model=\"text\"\r\n      @keydown=\"sendText\"\r\n    />\r\n    <button class=\"btn btn-outline-secondary\" @:click=\"send\">OK</button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\nimport axios from \"axios\";\r\n// import { Splitpanes, Pane } from \"splitpanes\";\r\nexport default {\r\n  name: \"InputFormView\",\r\n  props: {\r\n    title: String,\r\n    inputId: Number,\r\n    sendMode: String,\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      text: \"\",\r\n      keyCodeBefore: null,\r\n    };\r\n  },\r\n  methods: {\r\n    send: function () {\r\n      console.log(\"送信モード: \" + this.sendMode);\r\n      console.log(\"送信先ID: \" + this.inputId);\r\n      console.log(\"送信メッセージ: \" + this.text);\r\n      if (this.inputId <= 0) {\r\n        console.log(\"送信先のIDが0のため不正です。\");\r\n        return \"error\";\r\n      }\r\n      if (this.text == \"\") {\r\n        console.log(\"テキストが空のため不正です。\");\r\n        return \"error\";\r\n      }\r\n      let url = \"\";\r\n      let route = [];\r\n      let data = {};\r\n      // URLだけ調節するようにする方がコードがシンプルになりそう。\r\n      switch (this.sendMode) {\r\n        case \"S0001\":\r\n          console.log(this.sendMode);\r\n          break;\r\n\r\n        case \"S0002\":\r\n          url = \"http://localhost:3000/spaces/\";\r\n          route.push(\"create\", \"searchSpaces?pk_wid=\");\r\n          console.log(this.sendMode);\r\n          // データをJSON形式で保存して積んでいく\r\n          data = {\r\n            // parentID\r\n            pid: this.inputId,\r\n            // childId\r\n            // ここ積んでるけど使ってませんし登録してません\r\n            cid: this.$store.state.authFunction.userId,\r\n            // DM Flag\r\n            dc_flag: 0,\r\n            // content\r\n            content: this.text,\r\n          };\r\n          break;\r\n\r\n        case \"S0003\":\r\n          url = \"http://localhost:3000/threads/\";\r\n          route.push(\"create\", \"searchThreads?id=\");\r\n          console.log(this.sendMode);\r\n          // データをJSON形式で保存して積んでいく\r\n          data = {\r\n            // parentID\r\n            pid: this.inputId,\r\n            // childId\r\n            cid: this.$store.state.authFunction.userId,\r\n            // content\r\n            content: this.text,\r\n          };\r\n          break;\r\n\r\n        case \"S0004\":\r\n          url = \"http://localhost:3000/comments/\";\r\n          route.push(\"create\", \"searchComments?id=\");\r\n          console.log(this.sendMode);\r\n          // データをJSON形式で保存して積んでいく\r\n          data = {\r\n            // parentID\r\n            pid: this.inputId,\r\n            // childId\r\n            cid: this.$store.state.authFunction.userId,\r\n            // content\r\n            content: this.text,\r\n          };\r\n          break;\r\n\r\n        default:\r\n          console.log(\"送信処理分岐の対象外\");\r\n          break;\r\n      }\r\n      // URLを動的に変更\r\n      axios.post(url + route[0], data).then((res) => {\r\n        // console.log(res.data);\r\n        axios.get(url + route[1] + this.inputId).then((res) => {\r\n          switch (this.sendMode) {\r\n            case \"S0001\":\r\n              break;\r\n            case \"S0002\":\r\n              this.$store.state.spaceFunction.spaceList.data = res.data;\r\n              break;\r\n            case \"S0003\":\r\n              this.$store.state.threadFunction.threadList.data = res.data;\r\n              break;\r\n            case \"S0004\":\r\n              this.$store.state.commentFunction.commentList.data = res.data;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          // 入力値を初期化\r\n          this.text = \"\";\r\n        });\r\n        console.log(res.data);\r\n      });\r\n    },\r\n    /**\r\n     * Control(Code: 17)を直前に押下していた場合\r\n     * 投稿するメソッドを発火させる。\r\n     * @param {*} e \r\n     * keyCode: キーコード\r\n     * key: キー名\r\n     */\r\n    sendText: function (e) {\r\n      console.log(e.keyCode);\r\n      if (this.keyCodeBefore == 17) {\r\n        console.log(\"koko\");\r\n        if (e.keyCode == 13) {\r\n          this.send();\r\n        }\r\n      }\r\n      // 直前に入力したキーのコードを保存する。\r\n      this.keyCodeBefore = e.keyCode;\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}