{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_navbar_brand = _resolveComponent(\"b-navbar-brand\");\n  const _component_b_form_select_option = _resolveComponent(\"b-form-select-option\");\n  const _component_b_form_select = _resolveComponent(\"b-form-select\");\n  const _component_b_navbar = _resolveComponent(\"b-navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_b_navbar, null, {\n    default: _withCtx(() => [_createVNode(_component_b_navbar_brand, {\n      href: \"/\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"MyMiniSlack\")]),\n      _: 1\n    }), _createVNode(_component_b_form_select, {\n      modelValue: $data.selected,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selected = $event),\n      onChange: $options.selectWs\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.result, value => {\n        return _openBlock(), _createBlock(_component_b_form_select_option, {\n          key: value.id,\n          value: value.id,\n          modelValue: $data.selected,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selected = $event)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(value.Workspace.name), 1)]),\n          _: 2\n        }, 1032, [\"value\", \"modelValue\"]);\n      }), 128))]),\n      _: 1\n    }, 8, [\"modelValue\", \"onChange\"])]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAQ;;;;;;uBAAnBC,oBASM,OATNC,UASM,GARFC,aAOWC;sBANP,MAAqD,CAArDD,aAAqDE;MAArCC,IAAI,EAAC;IAAG;wBAAC,MAAW,kBAAX,aAAW;;QACpCH,aAIgBI;kBAJQC,cAAQ;iEAARA,cAAQ;MAAOC,QAAM,EAAEC;;wBACrB,MAAuB,oBAA7CT,oBAEuBU,6BAFeH,YAAM,EAAfI,KAAK;6BAAlCC,aAEuBC;UAFwBC,GAAG,EAAEH,KAAK,CAACI,EAAE;UAAGJ,KAAK,EAAEA,KAAK,CAACI,EAAE;sBAAWR,cAAQ;qEAARA,cAAQ;;4BAC7F,MAAwB,mCAAtBI,KAAK,CAACK,SAAS,CAACC,IAAI","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_b_navbar","_component_b_navbar_brand","href","_component_b_form_select","$data","onChange","$options","_Fragment","value","_createBlock","_component_b_form_select_option","key","id","Workspace","name"],"sourceRoot":"","sources":["C:\\Users\\ritu6\\Documents\\study\\js\\express\\MySlack\\src\\components\\Navbar.vue"],"sourcesContent":["<template>\r\n    <div class=\"navbar\">\r\n        <b-navbar>\r\n            <b-navbar-brand href=\"/\">MyMiniSlack</b-navbar-brand>\r\n            <b-form-select v-model=\"selected\" v-on:change=\"selectWs\">\r\n                <b-form-select-option v-for=\"value in result\" :key=\"value.id\" :value=\"value.id\" v-model=\"selected\">\r\n                    {{value.Workspace.name}}\r\n                </b-form-select-option>\r\n            </b-form-select>\r\n        </b-navbar>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"HomeView\",\r\n    components: {\r\n    },\r\n    data() {\r\n        return {\r\n            selected: '',\r\n            result: \"\",\r\n            val: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        /**\r\n         * スペースを更新する。\r\n         * @param {*} e 選択したコンボボックスのValue\r\n         */\r\n        selectWs: function (e) {\r\n            this.$store.state.workspaceFunction.workspaceId = e;\r\n            axios.get(\"http://localhost:3000/spaces/searchSpaces?pk_wid=\" + e)\r\n                .then((res) => {\r\n                    this.$store.state.spaceFunction.spaceList.data = res.data;\r\n                });\r\n        }\r\n    },\r\n    async mounted() {\r\n        const target_id = this.$store.state.authFunction.userId;\r\n        await axios.get(\"http://localhost:3000/auth/searchWs?id=\" + target_id)\r\n            .then((res) => {\r\n                this.result = res.data;\r\n                // selectedに設定する。\r\n                this.selected = this.result[0].id;\r\n                // 1個目を最初にロードする。\r\n                this.selectWs(this.result[0].id)\r\n            });\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}