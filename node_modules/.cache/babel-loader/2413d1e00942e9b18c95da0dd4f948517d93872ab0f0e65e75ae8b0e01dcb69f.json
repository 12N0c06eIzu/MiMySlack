{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"space\"\n};\nconst _hoisted_2 = {\n  class: \"textList\"\n};\nconst _hoisted_3 = [\"value\", \"on:click\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_InputForm = _resolveComponent(\"InputForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    title: \"スペース\"\n  }), _createVNode(_component_InputForm, {\n    inputId: this.$store.state.workspaceFunction.workspaceId,\n    sendMode: \"S0002\"\n  }, null, 8, [\"inputId\"]), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$store.state.spaceFunction.spaceList.data, value => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: value,\n      class: \"row list-unstyled my-2\"\n    }, [_createElementVNode(\"button\", {\n      class: \"btn btn-light openBtn\",\n      value: value.id,\n      \"on:click\": $event => $options.openSpace(value.id)\n    }, _toDisplayString(value.name), 41, _hoisted_3)]);\n  }), 128))])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAO;;EAOVA,KAAK,EAAC;AAAU;;;;;uBAPxBC,oBAoBM,OApBNC,UAoBM,GAnBJC,aAAuBC;IAAfC,KAAK,EAAC;EAAM,IACpBF,aAGEG;IAFDC,OAAO,OAAOC,MAAM,CAACC,KAAK,CAACC,iBAAiB,CAACC,WAAW;IACzDC,QAAQ,EAAC;4BAETC,oBAaM,cAZJA,oBAWK,MAXLC,UAWK,sBAVHb,oBASKc,kCATsBP,MAAM,CAACC,KAAK,CAACO,aAAa,CAACC,SAAS,CAACC,IAAI,EAAxDC,KAAK;yBAAjBlB,oBASK;MATkEmB,GAAG,EAAED,KAAK;MAAEnB,KAAK,EAAC;QAIvFa,oBAIS;MAJDb,KAAK,EAAC,uBAAuB;MAAEmB,KAAK,EAAEA,KAAK,CAACE,EAAE;MAAG,UAAM,YAAEC,kBAAS,CAACH,KAAK,CAACE,EAAE;wBAC/EF,KAAK,CAACI,IAAI","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Header","title","_component_InputForm","inputId","$store","state","workspaceFunction","workspaceId","sendMode","_createElementVNode","_hoisted_2","_Fragment","spaceFunction","spaceList","data","value","key","id","$options","name"],"sourceRoot":"","sources":["C:\\Users\\ritu6\\Documents\\study\\js\\express\\MySlack\\src\\components\\Spaces.vue"],"sourcesContent":["<template>\r\n  <div class=\"space\">\r\n    <Header title=\"スペース\" />\r\n    <InputForm \r\n    :inputId=\"this.$store.state.workspaceFunction.workspaceId\"\r\n    sendMode=\"S0002\"\r\n    />\r\n    <div>\r\n      <ul class=\"textList\">\r\n        <li v-for=\"(value) in this.$store.state.spaceFunction.spaceList.data\" :key=\"value\" class=\"row list-unstyled my-2\">\r\n          <!-- <p class=\"text-start col-8\">\r\n            {{value.name}}\r\n          </p> -->\r\n          <button class=\"btn btn-light openBtn\" :value=\"value.id\" @:click=\"openSpace(value.id)\">\r\n            {{value.name}}\r\n\r\n            <!-- <Icons iconName=\"arrow-right-thick\"/> -->\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\n// import axios from \"axios\";\r\n// import { Splitpanes, Pane } from \"splitpanes\";\r\nimport axios from \"axios\";\r\n\r\nimport \"splitpanes/dist/splitpanes.css\";\r\nimport Header from \"../components/Header.vue\"\r\nimport InputForm from \"../components/InputForm.vue\"\r\n// import Icons from \"@/components/utils/MdiIcons.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  components: {\r\n    Header,\r\n    InputForm,\r\n    // Icons\r\n  },\r\n  data() {\r\n    return {\r\n      result: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    searchSpaces: function () {\r\n      console.log(\"exec searchSpaces\");\r\n    },\r\n    openSpace: function (btnValue) {\r\n      this.$store.state.spaceFunction.spaceId = btnValue;\r\n      axios.get(\"http://localhost:3000/threads/searchThreads?id=\" + btnValue)\r\n        .then((res) => {\r\n          this.$store.state.threadFunction.threadList.data = res.data;\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  watch: {\r\n    pWsId: \"searchSpaces\"\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.textList {\r\n  padding-left: 0px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}